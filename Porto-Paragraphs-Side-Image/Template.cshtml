@using DotNetNuke.Entities.Modules
@{
    // Update or create the "hideadminborder" setting with the value "True"
    var currentModule = ModuleController.Instance.GetModule(Dnn.Module.ModuleID, Dnn.Module.TabID, false);
    if (currentModule != null && currentModule.TabModuleID > 0)
    {
        // Check if the "hideadminborder" setting is not set or is not "True"
        var currentSetting = currentModule.TabModuleSettings.ContainsKey("hideadminborder")
        ? currentModule.TabModuleSettings["hideadminborder"]
        : null;

        if (currentSetting == null || !currentSetting.ToString().Equals("True", StringComparison.OrdinalIgnoreCase))
        {
            // Update or create the "hideadminborder" setting with the value "True"
            ModuleController.Instance.UpdateTabModuleSetting(currentModule.TabModuleID, "hideadminborder", "True");
        }
    }
}

@if (!string.IsNullOrEmpty(Model.ModuleAnchor))
{
    <div id="@Model.ModuleAnchor"></div>
}
<div class="container">
    <div class="row @Model.Settings.MarginTop @Model.Settings.MarginBottom @Model.Settings.PaddingTop @Model.Settings.PaddingBottom">
        @if ((Model.Settings.ImagePosition ?? "right").ToLower() == "left")
        {
            @RenderImageColumn()
            @RenderTextColumn()
        }
        else
        {
            @RenderTextColumn()
            @RenderImageColumn()
        }
    </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", () => enableToooltips());

  function enableToooltips() {
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.forEach(function (tooltipTriggerEl) {
      new bootstrap.Tooltip(tooltipTriggerEl);
    });
  };
</script>

@helper RenderImageColumn()
{
    <div class="col-md-4">
        @if (Model.Image != null)
        {
            <img src="@Model.Image" alt="@Model.AltText" title="@Model.AltText" data-bs-toggle="tooltip" data-bs-title="@Model.AltText" data-placement="bottom" class="z-1 @Model.Classes" />
        }
        else
        {
            <!-- No Image Found -->
        }
    </div>
}

@helper RenderTextColumn()
{
    <div class="col-md-8">
        @if (Model.Paragraph != null)
        {
            @Html.Raw(Model.Paragraph)
        }
        else
        {
            <!-- No Paragraph Found -->
        }
    </div>
}
