@using DotNetNuke.Entities.Modules
@{
  // Update or create the "hideadminborder" setting with the value "True"
  var currentModule = ModuleController.Instance.GetModule(Dnn.Module.ModuleID, Dnn.Module.TabID, false);
  if (currentModule != null && currentModule.TabModuleID > 0)
  {
    // Check if the "hideadminborder" setting is not set or is not "True"
    var currentSetting = currentModule.TabModuleSettings.ContainsKey("hideadminborder")
    ? currentModule.TabModuleSettings["hideadminborder"]
    : null;

    if (currentSetting == null || !currentSetting.ToString().Equals("True", StringComparison.OrdinalIgnoreCase))
    {
      // Update or create the "hideadminborder" setting with the value "True"
      ModuleController.Instance.UpdateTabModuleSetting(currentModule.TabModuleID, "hideadminborder", "True");
    }
  }

    var completedAmmount = Model.CompletedAmmount ?? 0;
}

@if (!string.IsNullOrEmpty(Model.ModuleAnchor))
{
    <div id="@Model.ModuleAnchor"></div>
}
<div class="circular-bar">
  <div class="circular-bar-chart" data-percent="@completedAmmount" data-plugin-options="@string.Format("{6}'size': '{0}' ,'lineWidth': '{1}' , 'barColor' : '{2}' ,'trackColor': '#{3}' , {4} 'lineCap' : '{5}'{7}", Model.Settings.Size,Model.Settings.lineWidth, Model.Settings.barColor, Model.Settings.trackColor, Model.Settings.scaleColor !=null ? string.Format("'scaleColor': '#{0}' ,", Model.Settings.scaleColor) : string.Empty, Model.Settings.lineCap, "{", "}")">
    <strong>@Model.InnerContent</strong>
    <label>@string.Format("{0}%", completedAmmount)</label>
  </div>
</div>