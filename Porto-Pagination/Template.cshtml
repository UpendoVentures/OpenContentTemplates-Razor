@using DotNetNuke.Entities.Modules
@{
    // Update or create the "hideadminborder" setting with the value "True"
    var currentModule = ModuleController.Instance.GetModule(Dnn.Module.ModuleID, Dnn.Module.TabID, false);
    if (currentModule != null && currentModule.TabModuleID > 0)
    {
        // Check if the "hideadminborder" setting is not set or is not "True"
        var currentSetting = currentModule.TabModuleSettings.ContainsKey("hideadminborder")
        ? currentModule.TabModuleSettings["hideadminborder"]
        : null;

        if (currentSetting == null || !currentSetting.ToString().Equals("True", StringComparison.OrdinalIgnoreCase))
        {
            // Update or create the "hideadminborder" setting with the value "True"
            ModuleController.Instance.UpdateTabModuleSetting(currentModule.TabModuleID, "hideadminborder", "True");
        }
    }
}

@if (!string.IsNullOrEmpty(Model.ModuleAnchor))
{
    <div id="@Model.ModuleAnchor"></div>
}
<ul class="@Model.Settings.ButtonSize">
    <li class="page-item">
        <a class="page-link" href="#">
            <em class="fas fa-angle-double-left"></em>
            <span class="btn-text-indent">Previous</span>
        </a>
    </li>

    @foreach (var item in Model.Items)
    {
        <li class="page-item @(item.Active ? "active" : "")">
            <a class="page-link" href="#">@item.ListItemNumber</a>
        </li>
    }

    <li class="page-item">
        <a class="page-link" href="#">
            <em class="fas fa-angle-double-right"></em>
            <span class="btn-text-indent">Next</span>
        </a>
    </li>
</ul>